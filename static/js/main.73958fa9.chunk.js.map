{"version":3,"sources":["reportWebVitals.js","index.js","App.js","Components/question.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","useState","visibility","setVisibility","questionNumber","setQuestionNumber","score","setScore","selectedAnswer","setSelectedAnswer","loading","setLoading","question_title","optionA","optionB","optionC","optionD","correctOption","question","setCurrentQuestion","seconds","setSeconds","interval","useRef","getNewQuestion","stopCounter","fetch","response","json","data","question_options","results","incorrect_answers","correct_answer","sort","Math","random","startCounter","Buffer","from","toString","setNewQuestion","useEffect","i","getElementsByName","length","checked","alert","current","setInterval","prevState","clearInterval","className","onClick","id","QuestionTitle","OptionA","OptionB","OptionC","OptionD","sendSelectedAnswer","answer","console","log","Loading","ele","Question","props","handleOnChange","e","target","value","type","name","onChange","for"],"mappings":"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","file":"static/js/main.73958fa9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nimport React, { useState, useEffect, useRef } from 'react'\nimport Question from './Components/question.js'\nimport \"./App.css\"\n\n\nfunction App() {\n\n  const [visibility, setVisibility] = useState(false)\n  const [questionNumber, setQuestionNumber] = useState(0)\n  const [score, setScore] = useState(0)\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\")\n  const [loading, setLoading] = useState(true)\n  const [question, setCurrentQuestion] = useState({\n    question_title: \"\",\n    optionA: \"\",\n    optionB: \"\",\n    optionC: \"\",\n    optionD: \"\",\n    correctOption: \"\"\n  })\n  const [seconds, setSeconds] = useState(0)\n  const interval = useRef(null)\n  const getQuestionURL = \"https://opentdb.com/api.php?amount=1&category=18&difficulty=easy&type=multiple&encode=base64\";\n\n  function setNewQuestion(data) {\n\n        var shuffle = (array) => array.sort(() => Math.random() - 0.5);\n\n        var question_options = shuffle([data.results[0].incorrect_answers[0],\n            data.results[0].incorrect_answers[1],\n            data.results[0].incorrect_answers[2],\n            data.results[0].correct_answer\n        ])\n      setLoading(false)\n      startCounter()\n      setCurrentQuestion({\n        question_title: Buffer.from(data.results[0].question, 'base64').toString(),\n        optionA: Buffer.from(question_options[0], 'base64').toString(),\n        optionB: Buffer.from(question_options[1], 'base64').toString(),\n        optionC: Buffer.from(question_options[2], 'base64').toString(),\n        optionD: Buffer.from(question_options[3], 'base64').toString(),\n        correctOption: Buffer.from(data.results[0].correct_answer, 'base64').toString()\n      })\n\n      setQuestionNumber(questionNumber + 1)\n  }\n\n  function getNewQuestion(){\n    setLoading(true)\n    stopCounter()\n    fetch(getQuestionURL)\n      .then(response => response.json())\n      .then(data => setNewQuestion(data))\n  }\n\n  function timer(){\n    if(questionNumber <= 10){\n      if(questionNumber >= 0){\n        if(seconds > 20){\n\n          for(var i=0;i<document.getElementsByName(\"answer\").length;i++)\n            document.getElementsByName(\"answer\")[i].checked = false;\n\n          if(selectedAnswer === question.correctOption)\n            setScore(score + 1)\n          \n          if(questionNumber != 10)\n            getNewQuestion()\n          else{\n            alert(\"You scored \" + score + \" points!\")\n            setScore(0)\n            setQuestionNumber(11)\n          }\n          setSeconds(0)\n        }\n      }\n    }\n    else if(questionNumber == 11){\n      setVisibility(!visibility)\n      setQuestionNumber(0)\n      stopCounter()\n    }\n  }\n\n  function getSelectedAnswer(answer){\n    console.log(answer)\n    setSelectedAnswer(answer)\n  }\n\n  function handleSubmit(){\n    if(questionNumber < 10){\n      if(selectedAnswer === question.correctOption)\n        setScore(score + 1)\n\n      var ele = document.getElementsByName(\"answer\");\n      for(var i=0;i<ele.length;i++)\n        ele[i].checked = false;\n\n      getNewQuestion()\n      setSeconds(0)\n    }\n    else{\n      alert(\"You scored \" + score + \" points!\")\n      setScore(0)\n      setQuestionNumber(11)\n    }\n  }\n\n  function handleOnStart(){\n    getNewQuestion()\n    setVisibility(!visibility)\n  }\n  \n  useEffect(timer, [seconds])\n\n  const startCounter = () => interval.current = setInterval(() => {\n    setSeconds(prevState => prevState + 1)\n  }, 1000)\n\n  const stopCounter = () => clearInterval(interval.current)\n\n  return (\n    <div>\n      <div className = { !visibility ? \"visible container\" : \"invisible\" }>\n        <button className=\"center\" onClick={handleOnStart}>Start Quiz!</button>\n      </div>\n\n      <div id = \"question_container\" className = { visibility ? \"visible\" : \"invisible\" }>\n        <div> <strong>Question Number: </strong>{questionNumber} </div>\n        <hr />\n        <div>Your score is {score}</div>\n        <hr />\n        \n        <Question \n          QuestionTitle = {question.question_title} \n          OptionA = {question.optionA} \n          OptionB = {question.optionB} \n          OptionC = {question.optionC} \n          OptionD = {question.optionD}\n          sendSelectedAnswer = {getSelectedAnswer}\n          Loading = {loading}\n        />\n        <div id = {loading ? \"loading\" : \"\"}></div>\n        <div className={loading ? \"invisible\" : \"visible\"}>\n          <button id=\"submit_button\" onClick = {handleSubmit}>Submit</button>          \n        </div>\n        <hr />\n        <div>Time left for answering this question: <span id = \"timer\">{seconds}</span></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nexport default function Question(props){\r\n\r\n\tfunction handleOnChange(e){\r\n\t\tif(e.target.checked){\r\n\t\t\tprops.sendSelectedAnswer(e.target.value)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className = { !props.Loading ? \"visible\" : \"invisible\" }>\r\n\t\t\t\t\r\n\t\t\t<div id=\"question_title\">{props.QuestionTitle}</div>\r\n\t\t\t<div id=\"options_container\">\r\n\t\t\t\t<input className = \"radio\" type = \"radio\" id = \"optiona\" name = \"answer\" value = {props.OptionA} onChange = {handleOnChange} />\r\n\t\t\t\t<label className = \"radio-label\" for={props.OptionA}>{props.OptionA}</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type = \"radio\" id = \"optionb\" name = \"answer\" value = {props.OptionB} onChange = {handleOnChange} />\r\n\t\t\t\t<label for={props.OptionB}>{props.OptionB}</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type = \"radio\" id = \"optionc\" name = \"answer\" value = {props.OptionC} onChange = {handleOnChange} />\r\n\t\t\t\t<label for={props.OptionC}>{props.OptionC}</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type = \"radio\" id = \"optiond\" name = \"answer\" value = {props.OptionD} onChange = {handleOnChange} />\r\n\t\t\t\t<label for={props.OptionD}>{props.OptionD}</label>\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}"],"sourceRoot":""}