{"version":3,"sources":["reportWebVitals.js","index.js","App.js","Components/question.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","useState","visibility","setVisibility","questionNumber","setQuestionNumber","score","setScore","selectedAnswer","setSelectedAnswer","loading","setLoading","question_title","optionA","optionB","optionC","optionD","correctOption","question","setCurrentQuestion","seconds","setSeconds","interval","useRef","getNewQuestion","stopCounter","fetch","response","json","data","question_options","results","incorrect_answers","correct_answer","sort","Math","random","startCounter","Buffer","from","toString","setNewQuestion","useEffect","i","getElementsByName","length","checked","alert","current","setInterval","prevState","clearInterval","className","onClick","QuestionTitle","OptionA","OptionB","OptionC","OptionD","sendSelectedAnswer","answer","console","log","Loading","ele","Question","props","handleOnChange","e","target","value","type","id","name","onChange","for"],"mappings":"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","file":"static/js/main.e7f7e1ce.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport Question from './Components/question.js'\r\nimport \"./App.css\"\r\n\r\n\r\nfunction App() {\r\n\r\n  const [visibility, setVisibility] = useState(false)\r\n  const [questionNumber, setQuestionNumber] = useState(0)\r\n  const [score, setScore] = useState(0)\r\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n  const [question, setCurrentQuestion] = useState({\r\n    question_title: \"\",\r\n    optionA: \"\",\r\n    optionB: \"\",\r\n    optionC: \"\",\r\n    optionD: \"\",\r\n    correctOption: \"\"\r\n  })\r\n  const [seconds, setSeconds] = useState(20)\r\n  const interval = useRef(null)\r\n  const getQuestionURL = \"https://opentdb.com/api.php?amount=1&category=18&difficulty=easy&type=multiple&encode=base64\";\r\n\r\n  function setNewQuestion(data) {\r\n\r\n        var shuffle = (array) => array.sort(() => Math.random() - 0.5);\r\n\r\n        var question_options = shuffle([data.results[0].incorrect_answers[0],\r\n            data.results[0].incorrect_answers[1],\r\n            data.results[0].incorrect_answers[2],\r\n            data.results[0].correct_answer\r\n        ])\r\n      setLoading(false)\r\n      startCounter()\r\n      setCurrentQuestion({\r\n        question_title: Buffer.from(data.results[0].question, 'base64').toString(),\r\n        optionA: Buffer.from(question_options[0], 'base64').toString(),\r\n        optionB: Buffer.from(question_options[1], 'base64').toString(),\r\n        optionC: Buffer.from(question_options[2], 'base64').toString(),\r\n        optionD: Buffer.from(question_options[3], 'base64').toString(),\r\n        correctOption: Buffer.from(data.results[0].correct_answer, 'base64').toString()\r\n      })\r\n\r\n      setQuestionNumber(questionNumber + 1)\r\n  }\r\n\r\n  function getNewQuestion(){\r\n    setLoading(true)\r\n    stopCounter()\r\n    fetch(getQuestionURL)\r\n      .then(response => response.json())\r\n      .then(data => setNewQuestion(data))\r\n  }\r\n\r\n  function timer(){\r\n    if(questionNumber <= 10){\r\n      if(questionNumber >= 0){\r\n        if(seconds < 0){\r\n\r\n          for(var i=0;i<document.getElementsByName(\"answer\").length;i++)\r\n            document.getElementsByName(\"answer\")[i].checked = false;\r\n\r\n          if(selectedAnswer === question.correctOption)\r\n            setScore(score + 1)\r\n          \r\n          if(questionNumber != 10)\r\n            getNewQuestion()\r\n          else{\r\n            alert(\"You scored \" + score + \" points!\")\r\n            setScore(0)\r\n            setQuestionNumber(11)\r\n          }\r\n          setSeconds(20)\r\n        }\r\n      }\r\n    }\r\n    else if(questionNumber == 11){\r\n      setVisibility(!visibility)\r\n      setQuestionNumber(0)\r\n      stopCounter()\r\n    }\r\n  }\r\n\r\n  function getSelectedAnswer(answer){\r\n    console.log(answer)\r\n    setSelectedAnswer(answer)\r\n  }\r\n\r\n  function handleSubmit(){\r\n    if(questionNumber < 10){\r\n      if(selectedAnswer === question.correctOption)\r\n        setScore(score + 1)\r\n\r\n      var ele = document.getElementsByName(\"answer\");\r\n      for(var i=0;i<ele.length;i++)\r\n        ele[i].checked = false;\r\n\r\n      getNewQuestion()\r\n      setSeconds(20)\r\n    }\r\n    else{\r\n      alert(\"You scored \" + score + \" points!\")\r\n      setScore(0)\r\n      setQuestionNumber(11)\r\n    }\r\n  }\r\n\r\n  function handleOnStart(){\r\n    getNewQuestion()\r\n    setVisibility(!visibility)\r\n  }\r\n  \r\n  useEffect(timer, [seconds])\r\n\r\n  const startCounter = () => interval.current = setInterval(() => {\r\n    setSeconds(prevState => prevState - 1)\r\n  }, 1000)\r\n\r\n  const stopCounter = () => clearInterval(interval.current)\r\n\r\n  return (\r\n    <div>\r\n      <div className = { !visibility ? \"visible container\" : \"invisible\" }>\r\n        <button className=\"center\" onClick={handleOnStart}>Start Quiz!</button>\r\n      </div>\r\n\r\n      <div className = { (visibility ? \"visible \" : \"invisible\") + \" question_container\" } >\r\n        <div> <strong>Question Number: </strong>{questionNumber} </div>\r\n        <hr />\r\n        <div>Your score is {score}</div>\r\n        <hr />\r\n        \r\n        <Question \r\n          QuestionTitle = {question.question_title} \r\n          OptionA = {question.optionA} \r\n          OptionB = {question.optionB} \r\n          OptionC = {question.optionC} \r\n          OptionD = {question.optionD}\r\n          sendSelectedAnswer = {getSelectedAnswer}\r\n          Loading = {loading}\r\n        />\r\n        <div className = {loading ? \"loading\" : \"\"}></div>\r\n        <div className={loading ? \"invisible\" : \"visible\"}>\r\n          <button className=\"submit_button\" onClick = {handleSubmit}>Submit</button>          \r\n        </div>\r\n        <hr />\r\n        <div>Time left for answering this question: <span className = \"timer\">{seconds}</span></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nexport default function Question(props){\r\n\r\n\tfunction handleOnChange(e){\r\n\t\tif(e.target.checked){\r\n\t\t\tprops.sendSelectedAnswer(e.target.value)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className = { !props.Loading ? \"visible\" : \"invisible\" }>\r\n\t\t\t\t\r\n\t\t\t<div className=\"question_title\">{props.QuestionTitle}</div>\r\n\t\t\t<div className=\"options_container\">\r\n\t\t\t\t<input className = \"radio\" type = \"radio\" id = \"optiona\" name = \"answer\" value = {props.OptionA} onChange = {handleOnChange} />\r\n\t\t\t\t<label className = \"radio-label\" for=\"optiona\">{props.OptionA}</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type = \"radio\" id = \"optionb\" name = \"answer\" value = {props.OptionB} onChange = {handleOnChange} />\r\n\t\t\t\t<label for=\"optionb\">{props.OptionB}</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type = \"radio\" id = \"optionc\" name = \"answer\" value = {props.OptionC} onChange = {handleOnChange} />\r\n\t\t\t\t<label for=\"optionc\">{props.OptionC}</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type = \"radio\" id = \"optiond\" name = \"answer\" value = {props.OptionD} onChange = {handleOnChange} />\r\n\t\t\t\t<label for=\"optiond\">{props.OptionD}</label>\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}"],"sourceRoot":""}